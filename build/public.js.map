{"version":3,"file":"public.js","mappings":";;;;;;;;;;;AAAA;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D,E;;;;;;;;;;;;ACNuB;AAEvB,CAAC,UAAUA,CAAC,EAAE;EACV,YAAY;;EAEZ;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,CAAC,EAAEC,MAAM,CAAC,C","sources":["webpack://leira-letter-avatar/./src/public.scss?3390","webpack://leira-letter-avatar/webpack/bootstrap","webpack://leira-letter-avatar/webpack/runtime/make namespace object","webpack://leira-letter-avatar/./src/public.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './public.scss';\n\n(function ($) {\n    'use strict';\n\n    /**\n     * All the code for your public-facing JavaScript source\n     * should reside in this file.\n     *\n     * Note: It has been assumed you will write jQuery code here, so the\n     * $ function reference has been prepared for usage within the scope\n     * of this function.\n     *\n     * This enables you to define handlers, for when the DOM is ready:\n     *\n     * $(function() {\n     *\n     * });\n     *\n     * When the window is loaded:\n     *\n     * $( window ).load(function() {\n     *\n     * });\n     *\n     * ...and/or other possibilities.\n     *\n     * Ideally, it is not considered the best practice to attach more than a\n     * single DOM-ready or window-load handler for a particular page.\n     * Although scripts in the WordPress core, Plugins and Themes may be\n     * practising this, we should strive to set a better example in our own work.\n     */\n\n})(jQuery);\n"],"names":["$","jQuery"],"sourceRoot":""}